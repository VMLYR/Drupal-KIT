{#
/**
 * @file
 * Theme override to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 */

#}
{# {%
  set classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
  ]
%}
<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label %}
    <h2{{ title_attributes }}>{{ label }}</h2>
  {% endif %}
  {{ title_suffix }}
  {% block block_content %}
    {{ content }}
  {% endblock %}
</div> #}

{% set bem_block_block = bem_block_block|default('block') %}

{% set bem_block_element = bem_block_element|default(false) %}

{% if bem_block_modifiers is not defined %}
  {% set bem_block_modifiers = [] %}
{% endif %}

{% set block_type = block_type ?? false %}

{% if attributes['data-bem'].type %}{% set block_type = attributes['data-bem'].type %}{% endif %}

{% if configuration.view_mode %} {% set bem_block_modifiers = bem_block_modifiers|merge(['view-mode-' ~ configuration.view_mode|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if configuration.provider %} {% set bem_block_modifiers = bem_block_modifiers|merge(['provider-' ~ configuration.provider|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if plugin_id %} {% set bem_block_modifiers = bem_block_modifiers|merge([plugin_id|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if attributes['data-bem'].originalId %} {% set bem_block_modifiers = bem_block_modifiers|merge(['id-' ~ attributes['data-bem'].originalId|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if attributes['data-bem'].region %} {% set bem_block_modifiers = bem_block_modifiers|merge(['region-' ~ attributes['data-bem'].region|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if block_type %} {% set bem_block_modifiers = bem_block_modifiers|merge(['type-' ~ block_type|clean_class|replace({'_': '-'})]) %}{% endif %}
{% if configuration.view_mode and configuration.type %} {% set bem_block_modifiers = bem_block_modifiers|merge([configuration.type|clean_class|replace({'_': '-'}) ~ '--' ~  configuration.view_mode|clean_class|replace({'_': '-'})]) %}{% endif %}

{% if bem_block_extra is not defined %}
  {% set bem_block_extra = [] %}
{% endif %}

{% if configuration.provider %} {% set bem_block_extra = bem_block_extra|merge(['block-' ~ configuration.provider]) %}{% endif %}

{% set heading_level = heading_level|default(2) %}

{# Always get the title value #}
{% if label|default %}
  {% set heading = label %}
{% else %}
  {% set heading = configuration.label %}
{% endif %}

{# Provide an ID we an use for reference purposes if needed #}
{% set heading_id = heading_id ?? false %}
{% if attributes.id|default %}
  {% set heading_id = attributes.id|clean_class|replace({'_': '-'}) ~ '-heading' %}
{% else %}
  {% set heading_markup = heading['#markup'] ?: heading %}
  {% set heading_id = 'heading-' ~ heading_markup|clean_class|replace({'_': '-'}) ~ '-' ~ ("now"|date("Ydm")) %}
{% endif %}

{# Always use a descriptive label (block description) for your block
   If your title does not confirm to that, consider using a new field for your visible line of text (eg. 'Surf toâ€¦')
   and visually hiding the real, properly descriptive, label (eg. h2 'Main navigation' with class 'visually-hidden').
   As a last resort, if you can not add a real title, you can also use aria-label property with a descriptive text

   In the case of a lot of landmarks on the page, the aria stuff is also useful to distinguish navigations from each other:
   https://www.w3.org/WAI/GL/wiki/Using_ARIA_landmarks_to_identify_regions_of_a_page
#}

{# because 'attributes' method doesn't work in styleguide, as part of BEM or standalone, we need to pass the attributes manually#}
<div {{ bem(bem_block_block, bem_block_element, bem_block_modifiers, bem_block_extra, attributes) }}
  {% if configuration.label_display|default == false and heading|default %} aria-label="{{heading}}"{% endif %}
  {% if configuration.label_display|default and heading|default %} aria-labelledby="{{heading_id}}"{% endif %}
>

  {{ title_prefix }}
  {# Label. If no display, we don't show as a title tag but add prop aria-label in the wrapper. #}
  {% if configuration.label_display|default %}
    {% include "@%theme_prefix%-atoms/02-text/00-headings/_heading.twig" with {
      "heading_id": heading_id,
      "heading_level": heading_level,
      "heading": heading,
      "heading_display": configuration.label_display
    } %}
  {% endif %}
  {{ title_suffix }}

  {% block block_content %}
    {{ content }}
  {% endblock %}
</div>
