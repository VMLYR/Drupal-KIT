{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain one or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 *
 * @see template_preprocess_html()
 */
#}
<!DOCTYPE html>{% apply spaceless %}
<html{{ html_attributes }}>
  <head>

    <title>{{ head_title|safe_join(' | ') }}</title>

    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <head-placeholder token="{{ placeholder_token }}">

     {% block webfont %}
      {# if you use externally linked font CSS (eg. like with Google or Typekit), preload css file which includes the fonts #}
      {% if webfont_config_google_css != false %}
        <link as="style" rel="stylesheet preload prefetch" href="{{webfont_config_google_css}}" type="text/css" crossorigin="anonymous" onload="this.rel='stylesheet'" />
      {% endif %}
      {% if webfont_config_typekit_css != false %}
        <link as="style" rel="stylesheet preload prefetch" href="{{webfont_config_typekit_css}}" type="text/css" crossorigin="anonymous" onload="this.rel='stylesheet'" />
      {% endif %}

      {# if locally hosted fonts: preload the font files #}
      {% if webfont_config_font_files is defined and webfont_config_font_files is not null and webfont_config_font_files != false and webfont_config_font_files|length %}
        {# preLoad the font files #}
        {% for key, value in webfont_config_font_files %}
          {% for key2, value2 in webfont_config_font_types %}
            <link as="font" rel="preload" href="{{base_path ~ directory ~ '/fonts/' ~ value}}.{{value2}}" type="font/{{value2}}" crossorigin="anonymous" />
          {% endfor %}
        {% endfor %}
      {% endif %}

      {% if webfont_config_fonts_css is defined and webfont_config_fonts_css is not null and webfont_config_fonts_css != false and webfont_config_fonts_css|length %}
        {# Load the fonts css file inline: contains the @font-face declarations #}
        {% for key, value in webfont_config_fonts_css %}
        {% if base_path ~ directory ~ '/css/' ~ value is not empty %}
          <style>{{ source( base_path ~ directory ~ '/css/' ~ value)|replace({'../fonts': base_path ~ directory ~ '/fonts'})|raw }}</style>
        {% endif %}
        {% endfor %}
        {# Alternatively, async css-file loading using link-tag #}{#
        {% for key, value in webfont_config_fonts_css %}
        <link rel="preload" href="{{base_path ~ directory ~ '/css/' ~ value}}" as="style" onload="this.rel='stylesheet'">
        <noscript><link rel="stylesheet" href="{{base_path ~ directory ~ '/css/' ~ value}}"></noscript>
        <script>
        /*! for a loadCSS rel=preload polyfill, check out: https://github.com/filamentgroup/loadCSS/tree/v2.0.1#loadcss;
          via: https://www.filamentgroup.com/lab/async-css.html */
        </script>
        {% endfor %}#}
      {% endif %}

      {# load and monitor @font-face to know when it is safe to use #}
      {% set custom_fonts = false %}
      {% set custom_fonts_length = 0 %}

      {% if (webfont_config_font_families is defined and webfont_config_font_families is not null and webfont_config_font_families != false and webfont_config_font_families|length) %}
        {% set custom_fonts = true %}
        {% set custom_fonts_length = webfont_config_font_families|length %}
      {% endif %}
      {% if custom_fonts %}
      <script>
        (function() {
          // Optimization for Repeat Views
          if( sessionStorage.fontsLoadedCriticalFoftPolyfill ) {
            document.documentElement.className += " fonts-loaded";
            document.documentElement.className += "{% for key, value in webfont_config_font_families %} font-{{key|lower|replace({' ': '', '_': ''})}}-loaded{% endfor %}";
            return;
          }
          /* Font Face Observer v2.1.0 - Â© Bram Stein. License: BSD-3-Clause */(function(){'use strict';var f,g=[];function l(a){g.push(a);1==g.length&&f()}function m(){for(;g.length;)g[0](),g.shift()}f=function(){setTimeout(m)};function n(a){this.a=p;this.b=void 0;this.f=[];var b=this;try{a(function(a){q(b,a)},function(a){r(b,a)})}catch(c){r(b,c)}}var p=2;function t(a){return new n(function(b,c){c(a)})}function u(a){return new n(function(b){b(a)})}function q(a,b){if(a.a==p){if(b==a)throw new TypeError;var c=!1;try{var d=b&&b.then;if(null!=b&&"object"==typeof b&&"function"==typeof d){d.call(b,function(b){c||q(a,b);c=!0},function(b){c||r(a,b);c=!0});return}}catch(e){c||r(a,e);return}a.a=0;a.b=b;v(a)}}
function r(a,b){if(a.a==p){if(b==a)throw new TypeError;a.a=1;a.b=b;v(a)}}function v(a){l(function(){if(a.a!=p)for(;a.f.length;){var b=a.f.shift(),c=b[0],d=b[1],e=b[2],b=b[3];try{0==a.a?"function"==typeof c?e(c.call(void 0,a.b)):e(a.b):1==a.a&&("function"==typeof d?e(d.call(void 0,a.b)):b(a.b))}catch(h){b(h)}}})}n.prototype.g=function(a){return this.c(void 0,a)};n.prototype.c=function(a,b){var c=this;return new n(function(d,e){c.f.push([a,b,d,e]);v(c)})};
function w(a){return new n(function(b,c){function d(c){return function(d){h[c]=d;e+=1;e==a.length&&b(h)}}var e=0,h=[];0==a.length&&b(h);for(var k=0;k<a.length;k+=1)u(a[k]).c(d(k),c)})}function x(a){return new n(function(b,c){for(var d=0;d<a.length;d+=1)u(a[d]).c(b,c)})};window.Promise||(window.Promise=n,window.Promise.resolve=u,window.Promise.reject=t,window.Promise.race=x,window.Promise.all=w,window.Promise.prototype.then=n.prototype.c,window.Promise.prototype["catch"]=n.prototype.g);}());

(function(){function l(a,b){document.addEventListener?a.addEventListener("scroll",b,!1):a.attachEvent("scroll",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener("DOMContentLoaded",function c(){document.removeEventListener("DOMContentLoaded",c);a()}):document.attachEvent("onreadystatechange",function k(){if("interactive"==document.readyState||"complete"==document.readyState)document.detachEvent("onreadystatechange",k),a()})};function t(a){this.a=document.createElement("div");this.a.setAttribute("aria-hidden","true");this.a.appendChild(document.createTextNode(a));this.b=document.createElement("span");this.c=document.createElement("span");this.h=document.createElement("span");this.f=document.createElement("span");this.g=-1;this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}
function u(a,b){a.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+b+";"}function z(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+"px";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function A(a,b){function c(){var a=k;z(a)&&a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);z(a)};function B(a,b){var c=b||{};this.family=a;this.style=c.style||"normal";this.weight=c.weight||"normal";this.stretch=c.stretch||"normal"}var C=null,D=null,E=null,F=null;function G(){if(null===D)if(J()&&/Apple/.test(window.navigator.vendor)){var a=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);D=!!a&&603>parseInt(a[1],10)}else D=!1;return D}function J(){null===F&&(F=!!document.fonts);return F}
function K(){if(null===E){var a=document.createElement("div");try{a.style.font="condensed 100px sans-serif"}catch(b){}E=""!==a.style.font}return E}function L(a,b){return[a.style,a.weight,K()?a.stretch:"","100px",b].join(" ")}
B.prototype.load=function(a,b){var c=this,k=a||"BESbswy",r=0,n=b||3E3,H=(new Date).getTime();return new Promise(function(a,b){if(J()&&!G()){var M=new Promise(function(a,b){function e(){(new Date).getTime()-H>=n?b(Error(""+n+"ms timeout exceeded")):document.fonts.load(L(c,'"'+c.family+'"'),k).then(function(c){1<=c.length?a():setTimeout(e,25)},b)}e()}),N=new Promise(function(a,c){r=setTimeout(function(){c(Error(""+n+"ms timeout exceeded"))},n)});Promise.race([N,M]).then(function(){clearTimeout(r);a(c)},
b)}else m(function(){function v(){var b;if(b=-1!=f&&-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===C&&(b=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),C=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=C&&(f==w&&g==w&&h==w||f==x&&g==x&&h==x||f==y&&g==y&&h==y)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}function I(){if((new Date).getTime()-H>=n)d.parentNode&&d.parentNode.removeChild(d),b(Error(""+
n+"ms timeout exceeded"));else{var a=document.hidden;if(!0===a||void 0===a)f=e.a.offsetWidth,g=p.a.offsetWidth,h=q.a.offsetWidth,v();r=setTimeout(I,50)}}var e=new t(k),p=new t(k),q=new t(k),f=-1,g=-1,h=-1,w=-1,x=-1,y=-1,d=document.createElement("div");d.dir="ltr";u(e,L(c,"sans-serif"));u(p,L(c,"serif"));u(q,L(c,"monospace"));d.appendChild(e.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);w=e.a.offsetWidth;x=p.a.offsetWidth;y=q.a.offsetWidth;I();A(e,function(a){f=a;v()});u(e,
L(c,'"'+c.family+'",sans-serif'));A(p,function(a){g=a;v()});u(p,L(c,'"'+c.family+'",serif'));A(q,function(a){h=a;v()});u(q,L(c,'"'+c.family+'",monospace'))})})};"object"===typeof module?module.exports=B:(window.FontFaceObserver=B,window.FontFaceObserver.prototype.load=B.prototype.load);}());

          var fontsLength = {{custom_fonts_length}};
          var count = 0;

          {% for key, value in webfont_config_font_families %}
          var font{{key|replace({' ': '', '_': '', '-': ''})}} = new FontFaceObserver('{{value}}');
          font{{key|replace({' ': '', '_': '', '-': ''})}}.load(null, 10000).then(function () {
            document.documentElement.className += " font-{{key|lower|replace({' ': '', '_': ''})}}-loaded";
            // Optimization for Repeat Views
            ++count;
            if (count === fontsLength) {
              document.documentElement.className += " fonts-loaded";
              sessionStorage.fontsLoadedCriticalFoftPolyfill = true;
            }
          });
          {% endfor %}
        })();
      </script>
      {% endif %}

    {% endblock %}

    {% block favicons %}
      <link rel="apple-touch-icon" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon.png">
      <link rel="apple-touch-icon" sizes="60x60" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon-60x60.png">
      <link rel="apple-touch-icon" sizes="76x76" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon-76x76.png">
      <link rel="apple-touch-icon" sizes="120x120" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon-120x120.png">
      <link rel="apple-touch-icon" sizes="152x152" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon-152x152.png">
      <link rel="apple-touch-icon" sizes="180x180" href="{{ base_path ~ directory }}/favicons/generated/apple-touch-icon-180x180.png">

      <link rel="icon" type="image/png" sizes="192x192"  href="{{ base_path ~ directory }}/favicons/generated/android-chrome-192x192.png">
      <link rel="icon" type="image/png" sizes="512x512"  href="{{ base_path ~ directory }}/favicons/generated/android-chrome-512x512.png">

      <link rel="icon" type="image/png" sizes="32x32" href="{{ base_path ~ directory }}/favicons/generated/favicon-32x32.png">
      <link rel="icon" type="image/png" sizes="16x16" href="{{ base_path ~ directory }}/favicons/generated/favicon-16x16.png">
      <link rel="icon" href="{{ base_path ~ directory }}/favicons/generated/favicon.ico">

      <link rel="manifest" href="{{ base_path ~ directory }}/favicons/generated/site.webmanifest" crossorigin="use-credentials">
    {% endblock %}

    <css-placeholder token="{{ placeholder_token }}">
    <js-placeholder token="{{ placeholder_token }}">

  </head>

  <body{{ attributes.addClass(body_classes) }}>
    {#
      Keyboard navigation/accessibility link to main content section in
      page.html.twig.
    #}
    <a href="#main-content" class="visually-hidden focusable skip-link">
      {{ 'Skip to main content'|t }}
    </a>

    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-bottom-placeholder token="{{ placeholder_token }}">
  </body>
</html>{% endapply %}
